ABS|Una función matemática que devuelve el valor absoluto (positivo) de la expresión numérica especificada. (`ABS` cambia los valores negativos a valores positivos. `ABS` no tiene ningún efecto sobre valores cero o positivos).
ACOS|Función que devuelve el ángulo, en radianes, cuyo coseno es la expresión flotante especificada. Esto también se llama arcocoseno.
Aggregate|Una función agregada realiza un cálculo sobre un conjunto de valores y devuelve un valor único. Excepto `COUNT(*)`, las funciones agregadas ignoran los valores nulos. Las funciones agregadas se utilizan a menudo con la cláusula GROUP BY de la instrucción SELECT.
Analytic|SQL Server admite estas funciones analíticas:
APP_NAME|Esta función devuelve el nombre de la aplicación para la sesión actual, si la aplicación establece ese valor de nombre.
APPLOCK_MODE|Esta función devuelve el modo de bloqueo mantenido por el propietario del bloqueo en un recurso de aplicación particular. Como función de bloqueo de aplicaciones, APPLOCK_MODE opera en la base de datos actual. La base de datos es el alcance de los bloqueos de la aplicación.
APPLOCK_TEST|Esta función devuelve información sobre si se puede otorgar o no un bloqueo en un recurso de aplicación en particular, para un propietario de bloqueo específico, sin adquirir el bloqueo. Como función de bloqueo de aplicaciones, APPLOCK_TEST opera en la base de datos actual. La base de datos es el alcance de los bloqueos de la aplicación.
APPROX_COUNT_DISTINCT|Esta función devuelve el número aproximado de valores únicos no nulos en un grupo.
APPROX_PERCENTILE_CONT|Esta función devuelve un valor interpolado aproximado del conjunto de valores en un grupo según el valor percentil y la especificación de clasificación. Dado que se trata de una función aproximada, la salida estaría dentro del límite de error basado en rango con cierta confianza. El valor percentil devuelto por esta función se basa en una distribución continua de los valores de la columna y el resultado se interpolaría. Debido a esto, es posible que el resultado no sea uno de los valores del conjunto de datos. Uno de los casos de uso común de esta función es evitar datos atípicos. Esta función se puede utilizar como alternativa a PERCENTILE_CONT para conjuntos de datos grandes donde es aceptable un error insignificante con una respuesta más rápida en comparación con un valor percentil preciso con un tiempo de respuesta lento.
APPROX_PERCENTILE_DISC|Esta función devuelve el valor del conjunto de valores de un grupo según el percentil proporcionado y la especificación de clasificación. Dado que se trata de una función aproximada, la salida estaría dentro del límite de error basado en rango con cierta confianza. Como este percentil aproximado se basa en una distribución discreta de los valores de la columna, el valor de salida sería igual a uno de los valores específicos de la columna. Esta función se puede utilizar como alternativa a PERCENTILE_DISC para conjuntos de datos grandes donde es aceptable un error insignificante con una respuesta más rápida en comparación con un valor de percentil preciso con un tiempo de respuesta lento.
ASCII|Devuelve el valor del código ASCII del carácter más a la izquierda de una expresión de carácter.
ASIN|Función que devuelve el ángulo, en radianes, cuyo seno es la expresión **flotante** especificada. Esto también se llama **arcoseno**.
ASSEMBLYPROPERTY|Esta función devuelve información sobre una propiedad de un ensamblaje.
ASYMKEY_ID|Devuelve el ID de una clave asimétrica.
ASYMKEYPROPERTY|Esta función devuelve las propiedades de una clave asimétrica.
ATAN|Función que devuelve el ángulo, en radianes, cuya tangente es una expresión **flotante** especificada. Esto también se llama arcotangente.
ATN2|Devuelve el ángulo, en radianes, entre el eje x positivo y el rayo desde el origen hasta el punto (y, x), donde xey son los valores de las dos expresiones flotantes especificadas.
AVG|Esta función devuelve el promedio de los valores de un grupo. Ignora los valores nulos.
BINARY_CHECKSUM|Devuelve el valor de la suma de comprobación binaria calculado sobre una fila de una tabla o sobre una lista de expresiones.
BIT_COUNT|BIT_COUNT toma un parámetro y devuelve el número de bits establecidos en 1 en ese parámetro como un tipo **bigint**.
CAST|Estas funciones convierten una expresión de un tipo de datos a otro.
CEILING|Esta función devuelve el número entero más pequeño mayor o igual a la expresión numérica especificada.
CERT_ID|Esta función devuelve el valor de ID de un certificado.
CERTENCODED|Esta función devuelve la parte pública de un certificado en formato binario. Esta función toma un ID de certificado como argumento y devuelve el certificado codificado. Para crear un nuevo certificado, pase el resultado binario a **CREAR CERTIFICADO... CON BINARIO**.
CERTPRIVATEKEY|Esta función devuelve la clave privada de un certificado en formato binario. Esta función toma tres argumentos.
CERTPROPERTY|Devuelve el valor de una propiedad de certificado especificada.
CHAR|Devuelve el carácter de un solo byte con el código entero especificado, según lo definido por el juego de caracteres y la codificación de la clasificación predeterminada de la base de datos actual.
CHARINDEX|Esta función busca una expresión de carácter dentro de una expresión de segundo carácter y, si la encuentra, devuelve la posición inicial de la primera expresión.
CHECKSUM_AGG|Esta función devuelve la suma de comprobación de los valores de un grupo. `CHECKSUM_AGG` ignora los valores nulos. La [cláusula OVER](../../t-sql/queries/select-over-clause-transact-sql.md) puede seguir a `CHECKSUM_AGG`.
CHECKSUM|La función `CHECKSUM` devuelve el valor de la suma de comprobación calculado sobre una fila de la tabla o sobre una lista de expresiones. Utilice `CHECKSUM` para crear índices hash.
COL_LENGTH|Esta función devuelve la longitud definida de una columna, en bytes.
COL_NAME|Esta función devuelve el nombre de una columna de la tabla, según el número de identificación de la tabla y los valores del número de identificación de la columna de esa columna de la tabla.
COLLATIONPROPERTY|Esta función devuelve la propiedad solicitada de una intercalación especificada.
TERTIARY_WEIGHTS|Para cada carácter en una expresión de cadena no Unicode, definida con una intercalación terciaria de SQL, esta función devuelve una cadena binaria de pesos.
COLUMNPROPERTY|Esta función devuelve información de columna o parámetro.
COLUMNS_UPDATED|Esta función devuelve un patrón de bits **varbinary** que indica las columnas insertadas o actualizadas de una tabla o vista. Utilice `COLUMNS_UPDATED` en cualquier lugar dentro del cuerpo de un disparador [!INCLUDE[tsql](../../includes/tsql-md.md)] INSERT o UPDATE para probar si el disparador debe ejecutar ciertas acciones.
COMPRESS|Esta función comprime la expresión de entrada utilizando el algoritmo GZIP. La función devuelve una matriz de bytes de tipo **varbinary(max)**.
CONCAT|Esta función devuelve una cadena resultante de la concatenación o unión de dos o más valores de cadena de un extremo a otro. (Para agregar un valor de separación durante la concatenación, consulte [CONCAT_WS](../../t-sql/functions/concat-ws-transact-sql.md).)
CONCAT_WS|Esta función devuelve una cadena resultante de la concatenación o unión de dos o más valores de cadena de un extremo a otro. Separa esos valores de cadena concatenados con el delimitador especificado en el primer argumento de la función. (`CONCAT_WS` indica *concatenar con separador*.)
Configuration|Estas funciones escalares devuelven información sobre las opciones de configuración actuales:
CONNECTIONPROPERTY|Para una solicitud que llega al servidor, esta función devuelve información sobre las propiedades de la conexión única que admite esa solicitud.
@@CONNECTIONS|Esta función devuelve el número de intentos de conexión, tanto exitosos como fallidos, desde la última vez que se inició [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)].
CONTEXT_INFO|Esta función devuelve el valor **context_info** establecido para la sesión o lote actual, o derivado mediante el uso de [SET CONTEXT_INFO](../../t-sql/statements/set-context-info-transact- sql.md) declaración.
Conversion|Estas funciones admiten la conversión y conversión de tipos de datos:
COS|Una función matemática que devuelve el coseno trigonométrico del ángulo especificado (medido en radianes) en la expresión especificada.
COT|Una función matemática que devuelve la cotangente trigonométrica del ángulo especificado (en radianes) en la expresión **flotante** especificada.
COUNT_BIG|Esta función devuelve el número de elementos encontrados en un grupo. `COUNT_BIG` opera como la función [COUNT](../../t-sql/functions/count-transact-sql.md). Estas funciones difieren sólo en los tipos de datos de sus valores de retorno. `COUNT_BIG` siempre devuelve un valor de tipo de datos **bigint**. `COUNT` siempre devuelve un valor de tipo de datos **int**.
COUNT|Esta función devuelve el número de elementos encontrados en un grupo. `COUNT` opera como la función [COUNT_BIG](../../t-sql/functions/count-big-transact-sql.md). Estas funciones difieren sólo en los tipos de datos de sus valores de retorno. `COUNT` siempre devuelve un valor de tipo de datos **int**. `COUNT_BIG` siempre devuelve un valor de tipo de datos **bigint**.
CPU_BUSY|Esta función devuelve la cantidad de tiempo que [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)] ha pasado en operación activa desde su último inicio. `@@CPU_BUSY` devuelve un resultado medido en incrementos de tiempo de CPU o "tics". Este valor es acumulativo para todas las CPU, por lo que puede exceder el tiempo real transcurrido. Para convertir a microsegundos, multiplique por [@@TIMETICKS](./timeticks-transact-sql.md).
CRYPT_GEN_RANDOM|Esta función devuelve un número criptográfico generado aleatoriamente, generado por Crypto API (CAPI). `CRYPT_GEN_RANDOM` devuelve un número hexadecimal con una longitud de un número específico de bytes.
Cryptographic|Estas funciones admiten firma digital, validación de firma digital, cifrado y descifrado.
CUME_DIST|Para [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)], esta función calcula la distribución acumulativa de un valor dentro de un grupo de valores. En otras palabras, `CUME_DIST` calcula la posición relativa de un valor específico en un grupo de valores. Suponiendo un orden ascendente, `CUME_DIST` de un valor en la fila _r_ se define como el número de filas con valores menores o iguales a ese valor en la fila _r_, dividido por el número de filas evaluadas en la partición o conjunto de resultados de la consulta. `CUME_DIST` es similar a la función `PERCENT_RANK`.
CURRENT_REQUEST_ID|Esta función devuelve el ID de la solicitud actual dentro de la sesión actual.
CURRENT_TIMESTAMP|Esta función devuelve la marca de tiempo actual del sistema de la base de datos como un valor **fechahora**, sin el desplazamiento de la zona horaria de la base de datos. `CURRENT_TIMESTAMP` deriva este valor del sistema operativo de la computadora en la que se ejecuta la instancia de [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)].
CURRENT_TIMEZONE_ID|Esta función devuelve el ID de la zona horaria observada por un servidor o una instancia. Para Instancia administrada de Azure SQL, el valor de retorno se basa en la zona horaria de la propia instancia asignada durante la creación de la instancia, no en la zona horaria del sistema operativo subyacente.
CURRENT_TIMEZONE|Esta función devuelve el nombre de la zona horaria observada por un servidor o una instancia. Para Instancia administrada de SQL, el valor de retorno se basa en la zona horaria de la propia instancia asignada durante la creación de la instancia, no en la zona horaria del sistema operativo subyacente.
CURRENT_TRANSACTION_ID|Esta función devuelve el ID de transacción de la transacción actual en la sesión actual.
CURRENT_USER|Esta función devuelve el nombre del usuario actual. Esta función es equivalente a `USER_NAME()`.
Cursor|Estas funciones escalares devuelven información sobre los cursores:
@@CURSOR_ROWS|Esto devuelve el número de filas calificadas actualmente en el último cursor abierto en la conexión. Para mejorar el rendimiento, [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)] puede rellenar conjuntos de claves grandes y cursores estáticos de forma asincrónica. Se puede llamar a `@@CURSOR_ROWS` para determinar que el número de filas que califican para un cursor se recuperan en el momento de la llamada a @@CURSOR_ROWS.
CURSOR_STATUS|Para un parámetro determinado, `CURSOR_STATUS` muestra si una declaración de cursor ha devuelto un cursor y un conjunto de resultados.
Data|Estas funciones escalares devuelven información sobre varios valores de tipos de datos.
DATABASE_PRINCIPAL_ID|Esta función devuelve el número de identificación de un principal en la base de datos actual. Consulte [Principals &#40;Database Engine&#41;](../../relational-databases/security/authentication-access/principals-database-engine.md) para obtener más información sobre los principales.
DATABASEPROPERTYEX|Para una base de datos especificada en [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)], esta función devuelve la configuración actual de la opción o propiedad de la base de datos especificada.
DATALENGTH|Esta función devuelve el número de bytes utilizados para representar cualquier expresión.
Date|Las secciones de este artículo cubren todos los tipos de datos y funciones de fecha y hora de [!INCLUDE[tsql](../../includes/tsql-md.md)].
DATE_BUCKET|Esta función devuelve el valor de fecha y hora correspondiente al inicio de cada depósito de fecha y hora a partir de la marca de tiempo definida por el parámetro `origin`, o el valor de origen predeterminado de `1900-01-01 00:00:00.000` si el origen El parámetro no está especificado.
DATEADD|Esta función agrega un *número* (un entero con signo) a una *parte de fecha* de una *fecha* de entrada y devuelve un valor de fecha/hora modificado. Por ejemplo, puede utilizar esta función para encontrar la fecha que está a 7000 minutos de hoy: *número* = 7000, *datepart* = minuto, *fecha* = hoy.
DATEDIFF_BIG|Esta función devuelve el recuento (como un valor entero grande con signo) de los límites *datepart* especificados cruzados entre la *startdate* y la *enddate* especificadas.
DATEDIFF|Esta función devuelve el recuento (como un valor entero con signo) de los límites de la parte de fecha especificada cruzados entre la *fecha de inicio* y la *fecha de finalización* especificadas.
@@DATEFIRST|Esta función devuelve el valor actual de [SET DATEFIRST](../../t-sql/statements/set-datefirst-transact-sql.md), para una sesión específica.
DATEFROMPARTS|Esta función devuelve un valor de **fecha** que se asigna a los valores de año, mes y día especificados.
DATENAME|Esta función devuelve una cadena de caracteres que representa la *partedefecha* especificada de la *fecha* especificada.
DATEPART|Esta función devuelve un número entero que representa la *partedefecha* especificada de la *fecha* especificada.
DATETIME2FROMPARTS|Esta función devuelve un valor **datetime2** para los argumentos de fecha y hora especificados. El valor devuelto tiene una precisión especificada por el argumento de precisión.
DATETIMEFROMPARTS|Esta función devuelve un valor **fechahora** para los argumentos de fecha y hora especificados.
DATETIMEOFFSETFROMPARTS|Devuelve un valor **datetimeoffset** para los argumentos de fecha y hora especificados. El valor devuelto tiene una precisión especificada por el argumento de precisión y un desplazamiento según lo especificado por los argumentos de desplazamiento.
DATETRUNC|A partir de [!INCLUDE [sssql22-md](../../includes/sssql22-md.md)], esta función devuelve una *fecha* de entrada truncada a una *partede fecha* especificada.
DAY|Esta función devuelve un número entero que representa el día (día del mes) de la *fecha* especificada.
DB_ID|Esta función devuelve el número de identificación de la base de datos (ID) de una base de datos especificada.
DB_NAME|Esta función devuelve el nombre de una base de datos especificada.
DBTS|Esta función devuelve el valor del tipo de datos **marca de tiempo** actual para la base de datos actual. La base de datos actual tendrá un valor de marca de tiempo único garantizado.
DECOMPRESS|Esta función descomprimirá un valor de expresión de entrada, utilizando el algoritmo GZIP. `DECOMPRESS` devolverá una matriz de bytes (tipo VARBINARY(MAX)).
DECRYPTBYASYMKEY|Esta función utiliza una clave asimétrica para descifrar datos cifrados.
DECRYPTBYCERT|Esta función utiliza la clave privada de un certificado para descifrar datos cifrados.
DECRYPTBYKEY|Esta función utiliza una clave simétrica para descifrar datos.
DECRYPTBYKEYAUTOASYMKEY|Esta función descifra datos cifrados. Para hacer esto, primero descifra una clave simétrica con una clave asimétrica separada y luego descifra los datos cifrados con la clave simétrica extraída en el primer "paso".
DECRYPTBYKEYAUTOCERT|Esta función descifra datos con una clave simétrica. Esa clave simétrica se descifra automáticamente con un certificado.
DECRYPTBYPASSPHRASE|Esta función descifra datos originalmente cifrados con una frase de contraseña.
DEGREES|Esta función devuelve el ángulo correspondiente, en grados, para un ángulo especificado en radianes.
DENSE_RANK|Esta función devuelve la clasificación de cada fila dentro de una partición del conjunto de resultados, sin espacios en los valores de clasificación. La clasificación de una fila específica es uno más el número de valores de clasificación distintos que preceden a esa fila específica.
DIFFERENCE|Esta función devuelve un valor entero que mide la diferencia entre los valores [SOUNDEX()](./soundex-transact-sql.md) de dos expresiones de caracteres diferentes.
EDGE_ID_FROM_PARTS|Devuelve la representación de caracteres (JSON) del ID de borde para un ID de objeto y un ID de gráfico determinados.
ENCRYPTBYASYMKEY|Esta función cifra datos con una clave asimétrica.
ENCRYPTBYCERT|Cifra datos con la clave pública de un certificado.
ENCRYPTBYKEY|Cifra datos mediante el uso de una clave simétrica.
ENCRYPTBYPASSPHRASE|Cifre datos con una frase de contraseña utilizando el algoritmo TRIPLE DES con una longitud de 128 bits de clave.
EOMONTH|Esta función devuelve el último día del mes que contiene una fecha específica, con un desplazamiento opcional.
ERROR_LINE|Esta función devuelve el número de línea en el que se produjo un error que provocó la ejecución del bloque CATCH de una construcción TRY...CATCH.
ERROR_MESSAGE|Esta función devuelve el texto del mensaje del error que provocó la ejecución del bloque CATCH de una construcción TRY...CATCH.
ERROR_NUMBER|Esta función devuelve el número de error que provocó la ejecución del bloque CATCH de una construcción TRY...CATCH.
ERROR_PROCEDURE|Esta función devuelve el nombre del procedimiento almacenado o desencadenador donde se produce un error, si ese error provocó que se ejecutara el bloque CATCH de una construcción TRY...CATCH.
ERROR_SEVERITY|Esta función devuelve el valor de gravedad del error donde se produce un error, si ese error provocó que se ejecutara el bloque CATCH de una construcción TRY...CATCH.
ERROR_STATE|Devuelve el número de estado del error que provocó la ejecución del bloque CATCH de una construcción TRY...CATCH.
@@ERROR|Devuelve el número de error de la última instrucción [!INCLUDE[tsql](../../includes/tsql-md.md)] ejecutada.
EVENTDATA|Esta función devuelve información sobre eventos del servidor o de la base de datos. Cuando se activa una notificación de evento y el agente de servicio especificado recibe los resultados, se llama a "EVENTDATA". Un DDL o un activador de inicio de sesión también admiten el uso interno de "EVENTDATA".
EXP|Devuelve el valor exponencial de la expresión **flotante** especificada.
FETCH_STATUS|Esta función devuelve el estado de la última instrucción FETCH del cursor emitida contra cualquier cursor actualmente abierto por la conexión.
FILE_ID|Para el nombre lógico dado para un archivo componente de la base de datos actual, esta función devuelve el número de identificación (ID) del archivo.
FILE_IDEX|Esta función devuelve el número de identificación de archivo (ID) para el nombre lógico especificado de un archivo de datos, registro o texto completo de la base de datos actual.
FILE_NAME|Esta función devuelve el nombre de archivo lógico para un número de identificación (ID) de archivo determinado.
FILEGROUP_ID|Esta función devuelve el número de identificación (ID) del grupo de archivos para un nombre de grupo de archivos específico.
FILEGROUP_NAME|Esta función devuelve el nombre del grupo de archivos para el número de identificación (ID) del grupo de archivos especificado.
FILEGROUPPROPERTY|Esta función devuelve el valor de la propiedad del grupo de archivos para un nombre y valor de grupo de archivos especificados.
FILEPROPERTY|Devuelve el valor de propiedad del nombre de archivo especificado cuando se especifican un nombre de archivo en la base de datos actual y un nombre de propiedad. Devuelve NULL para archivos que no están en la base de datos actual.
FILEPROPERTYEX|Devuelve el valor de propiedad del archivo extendido especificado cuando se especifican un nombre de archivo en la base de datos actual y un nombre de propiedad. Devuelve NULL para archivos que no están en la base de datos actual o para propiedades de archivos extendidas que no existen. Actualmente, las propiedades de archivos extendidas solo se aplican a las bases de datos que se encuentran en Azure Blob Storage.
FIRST_VALUE|Devuelve el primer valor de un conjunto ordenado de valores.
FLOOR|Devuelve el número entero más grande menor o igual que la expresión numérica especificada.
FORMAT|Devuelve un valor formateado con el formato especificado y la cultura opcional. Utilice la función FORMAT para formatear valores numéricos y de fecha/hora según la configuración regional como cadenas. Para conversiones de tipos de datos generales, utilice CAST o CONVERT.
FORMATMESSAGE|Construye un mensaje a partir de un mensaje existente en sys.messages o de una cadena proporcionada. La funcionalidad de FORMATMESSAGE se parece a la de la declaración RAISERROR. Sin embargo, RAISERROR imprime el mensaje inmediatamente, mientras que FORMATMESSAGE devuelve el mensaje formateado para su posterior procesamiento.
FULLTEXTCATALOGPROPERTY|Devuelve información sobre las propiedades del catálogo de texto completo en [!INCLUDE[ssnoversion](../../includes/ssnoversion-md.md)].
FULLTEXTSERVICEPROPERTY|Devuelve información relacionada con las propiedades del motor de texto completo. Estas propiedades se pueden configurar y recuperar mediante **sp_fulltext_service**.
GENERATE_SERIES|Genera una serie de números dentro de un intervalo determinado. El intervalo y el paso entre los valores de la serie los define el usuario.
GET_BIT|GET_BIT toma dos parámetros y devuelve el bit en *expression_value* que está en el desplazamiento definido por *bit_offset*.
GET_FILESTREAM_TRANSACTION_CONTEXT|Devuelve un token que representa el contexto de transacción actual de una sesión. Una aplicación utiliza el token para vincular las operaciones de transmisión del sistema de archivos FILESTREAM a la transacción. Para obtener una lista de temas de FILESTREAM, consulte [Objeto binario grande &#40;Blob&#41; Datos &#40;SQL Server&#41;](../../relational-databases/blob/binary-large-object-blob-data-sql-server.md).
GETANSINULL|Devuelve la capacidad de nulidad predeterminada para la base de datos para esta sesión.
GETDATE|Devuelve la marca de tiempo actual del sistema de la base de datos como un valor **fechahora** sin el desplazamiento de la zona horaria de la base de datos. Este valor se deriva del sistema operativo de la computadora en la que se ejecuta la instancia de [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)].
GETUTCDATE|Devuelve la marca de tiempo actual del sistema de base de datos como un valor **fechahora**. El desplazamiento de la zona horaria de la base de datos no está incluido. Este valor representa la hora UTC actual (Tiempo Universal Coordinado). Este valor se deriva del sistema operativo de la computadora en la que se ejecuta la instancia de [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)].
Graph|Utilice las funciones descritas en las páginas de esta sección para extraer valores y transformar valores en las pseudocolumnas utilizadas en SQL Graph.
GRAPH_ID_FROM_EDGE_ID|Devuelve el ID del gráfico interno para un ID de borde determinado.
GRAPH_ID_FROM_NODE_ID|Devuelve el ID del gráfico interno para un ID de nodo determinado.
GROUPING_ID|Es una función que calcula el nivel de agrupación. GROUPING_ID solo se puede utilizar en las cláusulas SELECT \<select> list, HAVING u ORDER BY cuando se especifica GROUP BY.
GROUPING|Indica si una expresión de columna especificada en una lista GROUP BY está agregada o no. GROUPING devuelve 1 para agregado o 0 para no agregado en el conjunto de resultados. GROUPING solo se puede utilizar en las cláusulas SELECT \<select> list, HAVING y ORDER BY cuando se especifica GROUP BY.
HAS_DBACCESS|Devuelve información sobre si el usuario tiene acceso a la base de datos especificada.
HAS_PERMS_BY_NAME|Evalúa el permiso efectivo del usuario actual en un objeto asegurable. Una función relacionada es [fn_my_permissions](../../relational-databases/system-functions/sys-fn-my-permissions-transact-sql.md).
HASHBYTES|Devuelve el hash MD2, MD4, MD5, SHA, SHA1 o SHA2 de su entrada en [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)].
HOST_ID|Devuelve el número de identificación de la estación de trabajo. El número de identificación de la estación de trabajo es el ID de proceso (PID) de la aplicación en el equipo cliente que se conecta a [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)].
HOST_NAME|Devuelve el nombre de la estación de trabajo.
IDENT_CURRENT|Devuelve el último valor de identidad generado para una tabla o vista especificada. El último valor de identidad generado puede ser para cualquier sesión y cualquier ámbito.
IDENT_INCR|Devuelve el valor de incremento especificado al crear una tabla o columna de identidad de vista.
IDENT_SEED|Devuelve el valor inicial original especificado al crear una columna de identidad en una tabla o vista. Cambiar el valor actual de una columna de identidad mediante DBCC CHECKIDENT no cambia el valor devuelto por esta función.
IDENTITY|Se utiliza sólo en una instrucción SELECT con una cláusula INTO *table* para insertar una columna de identidad en una nueva tabla. Aunque similar, la función IDENTITY no es la propiedad IDENTITY que se utiliza con CREATE TABLE y ALTER TABLE.
@@IDENTITY|Es una función del sistema que devuelve el último valor de identidad insertado.
@@IDLE|Devuelve el tiempo que [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)] ha estado inactivo desde la última vez que se inició. El resultado está en incrementos de tiempo de CPU, o "tics", y es acumulativo para todas las CPU, por lo que puede exceder el tiempo transcurrido real. Multiplique por @@TIMETICKS para convertir a microsegundos.
INDEX_COL|Devuelve el nombre de la columna indexada. Devuelve NULL para índices XML.
INDEXKEY_PROPERTY|Devuelve información sobre la clave de índice. Devuelve NULL para índices XML.
INDEXPROPERTY|Devuelve el valor de propiedad de índice o estadística con nombre de un número de identificación de tabla, nombre de índice o estadística y nombre de propiedad especificados. Devuelve NULL para índices XML.
@@IO_BUSY|Devuelve el tiempo que [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)] ha dedicado a realizar operaciones de entrada y salida desde [!INCLUDE[ssNoVersion](../../includes/ssnoversion -md.md)] se inició por última vez. El resultado está en incrementos de tiempo de CPU ("tics") y es acumulativo para todas las CPU, por lo que puede exceder el tiempo transcurrido real. Multiplique por @@TIMETICKS para convertir a microsegundos.
IS_MEMBER|Indica si el usuario actual es miembro del grupo de Windows [!INCLUDE[msCoName](../../includes/msconame-md.md)] especificado o [!INCLUDE[ssNoVersion](../../includes /ssnoversion-md.md)] rol de base de datos. La función IS_MEMBER no es compatible con los grupos de Azure Active Directory.
IS_OBJECTSIGNED|Indica si un objeto está firmado por un certificado específico o una clave asimétrica.
IS_ROLEMEMBER|Indica si una entidad principal de base de datos especificada es miembro de la función de base de datos especificada.
IS_SRVROLEMEMBER|Indica si un inicio de sesión [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)] es miembro de la función de servidor especificada.
ISDATE|Devuelve 1 si la *expresión* es un valor de **fecha y hora** válido; en caso contrario, 0.
ISJSON|Prueba si una cadena contiene JSON válido.
ISNULL|Reemplaza NULL con el valor de reemplazo especificado.
ISNUMERIC|Determina si una expresión es un tipo numérico válido.
JSON_ARRAY|Construye texto de matriz JSON a partir de cero o más expresiones.
JSON|Utilice las funciones descritas en las páginas de esta sección para validar o cambiar texto JSON o para extraer valores simples o complejos.
JSON_MODIFY|Actualiza el valor de una propiedad en una cadena JSON y devuelve la cadena JSON actualizada.
JSON_OBJECT|Construye texto de objeto JSON a partir de cero o más expresiones.
JSON_PATH_EXISTS|Prueba si existe una ruta SQL/JSON especificada en la cadena JSON de entrada.
JSON_QUERY|Extrae un objeto o una matriz de una cadena JSON.
JSON_VALUE|Extrae un valor escalar de una cadena JSON.
KEY_GUID|Devuelve el GUID de una clave simétrica en la base de datos.
KEY_ID|Devuelve el ID de una clave simétrica en la base de datos actual.
KEY_NAME|Devuelve el nombre de la clave simétrica a partir de un GUID de clave simétrica o de texto cifrado.
LAG|Accede a datos de una fila anterior en el mismo conjunto de resultados sin el uso de una autounión que comience con [!INCLUDE[ssSQL11](../../includes/sssql11-md.md)]. LAG proporciona acceso a una fila en un desplazamiento físico determinado que precede a la fila actual. Utilice esta función analítica en una instrucción SELECT para comparar valores en la fila actual con valores en una fila anterior.
@@LANGID|Devuelve el identificador de idioma local (ID) del idioma que se está utilizando actualmente.
@@LANGUAGE|Devuelve el nombre del idioma que se utiliza actualmente.
LAST_VALUE|Devuelve el último valor de un conjunto ordenado de valores.
LEAD|Accede a datos de una fila posterior en el mismo conjunto de resultados sin el uso de una autounión que comience con [!INCLUDE[ssSQL11](../../includes/sssql11-md.md)]. LEAD proporciona acceso a una fila en un desplazamiento físico determinado que sigue a la fila actual. Utilice esta función analítica en una instrucción SELECT para comparar valores en la fila actual con valores en la fila siguiente.
LEFT_SHIFT|LEFT_SHIFT toma dos parámetros y devuelve el primer parámetro desplazado en bits a la izquierda el número de bits especificado en el segundo parámetro.
LEFT|Devuelve la parte izquierda de una cadena de caracteres con el número de caracteres especificado.
LEN|Devuelve el número de caracteres de la expresión de cadena especificada, excluyendo los espacios finales.
@@LOCK_TIMEOUT|Devuelve la configuración actual del tiempo de espera de bloqueo en milisegundos para la sesión actual.
LOG|Devuelve el logaritmo natural de la expresión **flotante** especificada en [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)].
LOG10|Devuelve el logaritmo en base 10 de la expresión **flotante** especificada.
CHOOSE|Devuelve el elemento en el índice especificado de una lista de valores en [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)].
GREATEST|Esta función devuelve el valor máximo de una lista de una o más expresiones.
IIF|Devuelve uno de dos valores, dependiendo de si la expresión booleana se evalúa como verdadera o falsa en [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)].
LEAST|Esta función devuelve el valor mínimo de una lista de una o más expresiones.
LOGINPROPERTY|Devuelve información sobre la configuración de la política de inicio de sesión.
LOWER|Devuelve una expresión de caracteres después de convertir datos de caracteres en mayúsculas a minúsculas.
LTRIM|::: moniker range="<=sql-server-ver15 || <=sql-server-linux-ver15 || = azure-sqldw-latest || = azuresqldb-current || = azuresqldb-mi-current"
Mathematical|Las siguientes funciones escalares realizan un cálculo, generalmente basado en valores de entrada que se proporcionan como argumentos, y devuelven un valor numérico:
@@MAX_CONNECTIONS|Devuelve el número máximo de conexiones de usuario simultáneas permitidas en una instancia de [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)]. El número devuelto no es necesariamente el número configurado actualmente.
@@MAX_PRECISION|Devuelve el nivel de precisión utilizado por los tipos de datos **decimal** y **numéricos** tal como están configurados actualmente en el servidor.
MAX|Devuelve el valor máximo de la expresión.
Metadata|Las siguientes funciones escalares devuelven información sobre la base de datos y los objetos de la base de datos:
MIN_ACTIVE_ROWVERSION|Devuelve el valor de **versión de fila** activa más bajo en la base de datos actual. Un valor de **rowversion** está activo si se utiliza en una transacción que aún no se ha confirmado. Para obtener más información, consulte [versión de fila &#40;Transact-SQL&#41;](../../t-sql/data-types/rowversion-transact-sql.md).
MIN|Devuelve el valor mínimo de la expresión. Puede ir seguido de la [cláusula OVER](../../t-sql/queries/select-over-clause-transact-sql.md).
MONTH|Devuelve un número entero que representa el mes de la *fecha* especificada.
NCHAR|Devuelve el carácter Unicode con el código entero especificado, tal como lo define el estándar Unicode.
@@NESTLEVEL|Devuelve el nivel de anidamiento de la ejecución del procedimiento almacenado actual (inicialmente 0) en el servidor local.
NEWID|Crea un valor único de tipo **identificador único**.
NEWSEQUENTIALID|Crea un GUID que es mayor que cualquier GUID generado previamente por esta función en una computadora especificada desde que se inició Windows. Después de reiniciar Windows, el GUID puede comenzar nuevamente desde un rango inferior, pero sigue siendo único a nivel mundial. Cuando se utiliza una columna GUID como identificador de fila, usar NEWSEQUENTIALID puede ser más rápido que usar la función NEWID. Esto se debe a que la función NEWID provoca actividad aleatoria y utiliza menos páginas de datos almacenados en caché. El uso de NEWSEQUENTIALID también ayuda a llenar completamente las páginas de datos e índice.
NEXT|Genera un número de secuencia a partir del objeto de secuencia especificado.
NODE_ID_FROM_PARTS|Devuelve la representación de caracteres (JSON) del ID de nodo para un ID de objeto y un ID de gráfico determinados.
NTILE|Distribuye las filas de una partición ordenada en un número específico de grupos. Los grupos están numerados, empezando por el uno. Para cada fila, NTILE devuelve el número del grupo al que pertenece la fila.
OBJECT_DEFINITION|Devuelve el texto fuente [!INCLUDE[tsql](../../includes/tsql-md.md)] de la definición de un objeto especificado.
OBJECT_ID_FROM_EDGE_ID|Devuelve el ID del objeto para un ID de borde del gráfico determinado.
OBJECT_ID_FROM_NODE_ID|Devuelve el ID de objeto para un ID de nodo de gráfico determinado.
OBJECT_ID|Devuelve el número de identificación del objeto de la base de datos de un objeto con ámbito de esquema.
OBJECT_NAME|Devuelve el nombre del objeto de la base de datos para objetos con ámbito de esquema. Para obtener una lista de objetos con ámbito de esquema, consulte [sys.objects &#40;Transact-SQL&#41;](../../relational-databases/system-catalog-views/sys-objects-transact-sql. Maryland).
OBJECT_SCHEMA_NAME|Devuelve el nombre del esquema de la base de datos para objetos con ámbito de esquema. Para obtener una lista de objetos con ámbito de esquema, consulte [sys.objects &#40;Transact-SQL&#41;](../../relational-databases/system-catalog-views/sys-objects-transact-sql. Maryland).
OBJECTPROPERTY|Devuelve información sobre objetos con ámbito de esquema en la base de datos actual. Para obtener una lista de objetos con ámbito de esquema, consulte [sys.objects &#40;Transact-SQL&#41;](../../relational-databases/system-catalog-views/sys-objects-transact-sql. Maryland). Esta función no se puede utilizar para objetos que no tienen un ámbito de esquema, como activadores de lenguaje de definición de datos (DDL) y notificaciones de eventos.
OBJECTPROPERTYEX|Devuelve información sobre objetos con ámbito de esquema en la base de datos actual. Para obtener una lista de estos objetos, consulte [sys.objects &#40;Transact-SQL&#41;](../../relational-databases/system-catalog-views/sys-objects-transact-sql.md) . OBJECTPROPERTYEX no se puede utilizar para objetos que no tienen un ámbito de esquema, como activadores de lenguaje de definición de datos (DDL) y notificaciones de eventos.
ODBC|Puede utilizar [Funciones escalares ODBC](../../odbc/reference/appendixes/appendix-e-scalar-functions.md) en [!INCLUDE[tsql](../../includes/tsql-md .md)] declaraciones. Estas declaraciones son interpretadas por [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)]. Se pueden utilizar en procedimientos almacenados y funciones definidas por el usuario. Estas incluyen funciones de cadena, numéricas, de hora, de fecha, de intervalo y del sistema.
OPENDATASOURCE|Proporciona información de conexión ad hoc como parte de un nombre de objeto de cuatro partes sin utilizar un nombre de servidor vinculado.
OPENJSON|**OPENJSON** es una función con valores de tabla que analiza texto JSON y devuelve objetos y propiedades de la entrada JSON como filas y columnas. En otras palabras, **OPENJSON** proporciona una vista de conjunto de filas sobre un documento JSON. Puede especificar explícitamente las columnas en el conjunto de filas y las rutas de propiedad JSON utilizadas para completar las columnas. Dado que **OPENJSON** devuelve un conjunto de filas, puede usar **OPENJSON** en la cláusula `FROM` de un [!INCLUDE[tsql](../../includes/tsql-md.md)] declaración tal como puede usar cualquier otra tabla, vista o función con valores de tabla.
OPENQUERY|Ejecuta la consulta de paso especificada en el servidor vinculado especificado. Este servidor es una fuente de datos OLE DB. Se puede hacer referencia a OPENQUERY en la cláusula FROM de una consulta como si fuera el nombre de una tabla. También se puede hacer referencia a OPENQUERY como la tabla de destino de una instrucción INSERT, UPDATE o DELETE. Esto está sujeto a las capacidades del proveedor OLE DB. Aunque la consulta puede devolver varios conjuntos de resultados, OPENQUERY devuelve sólo el primero.
OPENROWSET|Incluye toda la información de conexión necesaria para acceder a datos remotos desde una fuente de datos OLE DB. Este método es una alternativa al acceso a tablas en un servidor vinculado y es un método ad hoc único para conectarse y acceder a datos remotos mediante OLE DB. Para referencias más frecuentes a fuentes de datos OLE DB, utilice servidores vinculados. Para obtener más información, consulte [Servidores vinculados &#40;Motor de base de datos&#41;](../../relational-databases/linked-servers/linked-servers-database-engine.md). Se puede hacer referencia a la función `OPENROWSET` en la cláusula FROM de una consulta como si fuera el nombre de una tabla. También se puede hacer referencia a la función `OPENROWSET` como la tabla de destino de una declaración `INSERT`, `UPDATE` o `DELETE`, sujeto a las capacidades del proveedor OLE DB. Aunque la consulta puede devolver varios conjuntos de resultados, `OPENROWSET` devuelve sólo el primero.
OPENXML|OPENXML proporciona una vista de conjunto de filas sobre un documento XML. Debido a que OPENXML es un proveedor de conjuntos de filas, OPENXML se puede utilizar en declaraciones [!INCLUDE[tsql](../../includes/tsql-md.md)] en las que proveedores de conjuntos de filas, como una tabla, una vista o la función OPENROWSET puede aparecer.
@@OPTIONS|Devuelve información sobre las opciones SET actuales.
ORIGINAL_DB_NAME|Devuelve el nombre de la base de datos especificado por el usuario en la cadena de conexión de la base de datos. Esta base de datos se especifica mediante la opción **sqlcmd-d** (USE *database*). También se puede especificar con la expresión de origen de datos Open Database Connectivity (ODBC) (catálogo inicial =*nombre de la base de datos*).
ORIGINAL_LOGIN|Devuelve el nombre del inicio de sesión que se conectó a la instancia de [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)]. Puede utilizar esta función para devolver la identidad del inicio de sesión original en sesiones en las que hay muchos cambios de contexto explícitos o implícitos.
@@PACK_RECEIVED|Devuelve el número de paquetes de entrada leídos de la red por [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)] desde la última vez que se inició.
@@PACK_SENT|Devuelve el número de paquetes de salida escritos en la red por [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)] desde la última vez que se inició.
@@PACKET_ERRORS|Devuelve el número de errores de paquetes de red que se han producido en las conexiones [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)] desde [!INCLUDE[ssNoVersion](../../includes/ ssnoversion-md.md)] se inició por última vez.
PARSE|Devuelve el resultado de una expresión, traducida al tipo de datos solicitado en [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)].
PARSENAME|Devuelve la parte especificada del nombre de un objeto. Las partes de un objeto que se pueden recuperar son el nombre del objeto, el nombre del esquema, el nombre de la base de datos y el nombre del servidor.
$PARTITION|Devuelve el número de partición al que se asignaría un conjunto de valores de columnas de partición para cualquier función de partición especificada.
PATINDEX|Devuelve la posición inicial de la primera aparición de un patrón en una expresión especificada, o cero si no se encuentra el patrón, en todos los tipos de datos de caracteres y texto válidos.
PERCENT_RANK|Calcula la clasificación relativa de una fila dentro de un grupo de filas en [!INCLUDE[ssnoversion](../../includes/ssnoversion-md.md)]. Utilice PERCENT_RANK para evaluar la posición relativa de un valor dentro de un conjunto de resultados de consulta o una partición. PERCENT_RANK es similar a la función CUME_DIST.
PERCENTILE_CONT|Calcula un percentil basado en una distribución continua del valor de la columna en [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)]. El resultado se interpola y es posible que no sea igual a ninguno de los valores específicos de la columna.
PERCENTILE_DISC|Calcula un percentil específico para valores ordenados en un conjunto de filas completo o dentro de las distintas particiones de un conjunto de filas en [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)]. Para un valor percentil determinado *P*, PERCENTILE_DISC ordena los valores de expresión en la cláusula ORDER BY. Luego devuelve el valor con el valor CUME_DIST más pequeño dado (con respecto a la misma especificación de clasificación) que sea mayor o igual a *P*. Por ejemplo, PERCENTILE_DISC (0,5) calculará el percentil 50 (es decir, la mediana) de una expresión. PERCENTILE_DISC calcula el percentil basándose en una distribución discreta de los valores de la columna. El resultado es igual a un valor de columna específico.
PERMISSIONS|Devuelve un valor que contiene un mapa de bits que indica los permisos de declaración, objeto o columna del usuario actual.
PI|Devuelve el valor constante de PI.
POWER|Devuelve el valor de la expresión especificada a la potencia especificada.
@@PROCID|Devuelve el identificador de objeto (ID) del módulo [!INCLUDE[tsql](../../includes/tsql-md.md)] actual. Un módulo [!INCLUDE[tsql](../../includes/tsql-md.md)] puede ser un procedimiento almacenado, una función definida por el usuario o un desencadenador. @@PROCID no se puede especificar en los módulos CLR ni en el proveedor de acceso a datos en proceso.
PWDCOMPARE|Realiza un hash de una contraseña y lo compara con el hash de una contraseña existente. PWDCOMPARE se puede utilizar para buscar contraseñas de inicio de sesión [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)] en blanco o contraseñas débiles comunes.
PWDENCRYPT|Devuelve el hash de contraseña [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)] del valor de entrada que usa la versión actual del algoritmo de hash de contraseña.
QUOTENAME|Devuelve una cadena Unicode con los delimitadores agregados para que la cadena de entrada sea un identificador delimitado [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)] válido.
RADIANS|Devuelve radianes cuando se ingresa una expresión numérica, en grados.
RAND|Devuelve un valor pseudoaleatorio **flotante** de 0 a 1, exclusivo.
RANK|Devuelve la clasificación de cada fila dentro de la partición de un conjunto de resultados. El rango de una fila es uno más el número de rangos que preceden a la fila en cuestión.
Ranking|Las funciones de clasificación devuelven un valor de clasificación para cada fila de una partición. Dependiendo de la función que se utilice, algunas filas pueden recibir el mismo valor que otras filas. Las funciones de clasificación no son deterministas.
@@REMSERVER|
REPLACE|Reemplaza todas las apariciones de un valor de cadena especificado con otro valor de cadena.
REPLICATE|Repite un valor de cadena un número específico de veces.
REVERSE|Devuelve el orden inverso de un valor de cadena.
RIGHT_SHIFT|RIGHT_SHIFT toma dos parámetros y devuelve el primer parámetro desplazado en bits a la derecha por el número de bits especificado en el segundo parámetro.
RIGHT|Devuelve la parte derecha de una cadena de caracteres con el número de caracteres especificado.
ROUND|Devuelve un valor numérico, redondeado a la longitud o precisión especificada.
ROW_NUMBER|Numera la salida de un conjunto de resultados. Más específicamente, devuelve el número secuencial de una fila dentro de una partición de un conjunto de resultados, comenzando en 1 para la primera fila de cada partición.
ROWCOUNT_BIG|Devuelve el número de filas afectadas por la última declaración ejecutada. Esta función funciona como [@@ROWCOUNT](../../t-sql/functions/rowcount-transact-sql.md), excepto que el tipo de retorno de ROWCOUNT_BIG es **bigint**.
@@ROWCOUNT|Devuelve el número de filas afectadas por la última declaración. Si el número de filas es superior a 2 mil millones, utilice [ROWCOUNT_BIG](../../t-sql/functions/rowcount-big-transact-sql.md).
RTRIM|::: moniker range="<=sql-server-ver15 || <=sql-server-linux-ver15 || = azure-sqldw-latest || = azuresqldb-current || = azuresqldb-mi-current"
SCHEMA_ID|Devuelve el ID del esquema asociado con un nombre de esquema.
SCHEMA_NAME|Devuelve el nombre del esquema asociado con un ID de esquema.
SCOPE_IDENTITY|Devuelve el último valor de identidad insertado en una columna de identidad en el mismo ámbito. Un alcance es un módulo: un procedimiento almacenado, un activador, una función o un lote. Por lo tanto, si dos declaraciones están en el mismo procedimiento almacenado, función o lote, están en el mismo ámbito.
Security|Las siguientes funciones devuelven información que es útil para gestionar la seguridad. Las funciones adicionales se enumeran en [Funciones criptográficas &#40;Transact-SQL&#41;](../../t-sql/functions/cryptographic-functions-transact-sql.md).
@@SERVERNAME|Devuelve el nombre del servidor local que ejecuta [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)].
SERVERPROPERTY|Devuelve información de propiedad sobre la instancia del servidor.
@@SERVICENAME|Devuelve el nombre de la clave de registro bajo la cual se ejecuta [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)]. @@SERVICENAME devuelve 'MSSQLSERVER' si la instancia actual es la instancia predeterminada; esta función devuelve el nombre de la instancia si la instancia actual es una instancia con nombre.
SESSION_CONTEXT|Devuelve el valor de la clave especificada en el contexto de la sesión actual. El valor se establece mediante [sp_set_session_context &#40;Transact-SQL&#41;](../../relational-databases/system-stored-procedures/sp-set-session-context-transact-sql.md ) procedimiento.
SESSION_ID|Devuelve el ID del [!INCLUDE[ssSDW](../../includes/sssdw-md.md)] o [!INCLUDE[ssPDW_md](../../includes/sspdw-md.md) actual ] sesión.
SESSION_USER|SESSION_USER devuelve el nombre de usuario del contexto actual en la base de datos actual.
SESSIONPROPERTY|Devuelve la configuración de opciones SET de una sesión.
SET_BIT|SET_BIT devuelve *valor_expresión* compensado por el bit definido por *bit_offset*. El valor de bit por defecto es 1, o lo establece *bit_value*.
SIGN|Devuelve el signo positivo (+1), cero (0) o negativo (-1) de la expresión especificada.
SIGNBYASYMKEY|Firma texto sin formato con una clave asimétrica.
SIGNBYCERT|Firma el texto con un certificado y devuelve la firma.
SIN|Devuelve el seno trigonométrico del ángulo especificado, en radianes y en una expresión numérica aproximada, **flotante**.
SMALLDATETIMEFROMPARTS|Devuelve un valor **smalldatetime** para la fecha y hora especificadas.
SOUNDEX|Devuelve un código de cuatro caracteres (SOUNDEX) para evaluar la similitud de dos cadenas.
SPACE|Devuelve una cadena de espacios repetidos.
@@SPID|Devuelve el ID de sesión del proceso de usuario actual.
SQL_VARIANT_PROPERTY|Devuelve el tipo de datos base y otra información sobre un valor **sql_variant**.
SQRT|Devuelve la raíz cuadrada del valor flotante especificado.
SQUARE|Devuelve el cuadrado del valor flotante especificado.
STATS_DATE|Devuelve la fecha de la actualización más reciente de las estadísticas de una tabla o vista indexada.
STDEV|Devuelve la desviación estándar estadística de todos los valores de la expresión especificada.
STDEVP|Devuelve la desviación estándar estadística de la población para todos los valores de la expresión especificada.
STR|Devuelve datos de caracteres convertidos a partir de datos numéricos. Los datos de caracteres están justificados a la derecha, con una longitud especificada y precisión decimal.
STRING_AGG|<!--[!INCLUDE [sqlserver2017-asdb-asdbmi-asa](../../includes/applies-to-version/sqlserver2017-asdb-asdbmi-asa.md)]-->
STRING_ESCAPE|Escapa de caracteres especiales en textos y devuelve texto con caracteres de escape. **STRING_ESCAPE** es una función determinista introducida en SQL Server 2016.
String|Las siguientes funciones escalares realizan una operación en un valor de entrada de cadena y devuelven una cadena o un valor numérico:
STRING_SPLIT|Una función con valores de tabla que divide una cadena en filas de subcadenas, según un carácter separador especificado.
STUFF|La función STUFF inserta una cadena en otra cadena. Elimina una longitud especificada de caracteres en la primera cadena en la posición inicial y luego inserta la segunda cadena en la primera cadena en la posición inicial.
SUBSTRING|Devuelve parte de una expresión de carácter, binario, texto o imagen en [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)].
SUM|Devuelve la suma de todos los valores, o solo los valores DISTINCT, en la expresión. SUM sólo se puede utilizar con columnas numéricas. Los valores nulos se ignoran.
SUSER_ID|Devuelve el número de identificación de inicio de sesión del usuario.
SUSER_NAME|Devuelve el nombre de identificación de inicio de sesión del usuario.
SUSER_SID|Devuelve el número de identificación de seguridad (SID) para el nombre de inicio de sesión especificado.
SUSER_SNAME|Devuelve el nombre de inicio de sesión asociado con un número de identificación de seguridad (SID).
SWITCHOFFSET|Devuelve un valor **datetimeoffset** que se cambia del desplazamiento de zona horaria almacenado a un nuevo desplazamiento de zona horaria especificado.
SYMKEYPROPERTY|Devuelve el algoritmo de una clave simétrica creada a partir de un módulo EKM.
SYSDATETIME|Devuelve un valor **datetime2(7)** que contiene la fecha y hora del equipo en el que se ejecuta la instancia de [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)].
SYSDATETIMEOFFSET|Devuelve un valor **datetimeoffset(7)** que contiene la fecha y hora del equipo en el que se ejecuta la instancia de [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)]. Se incluye el desplazamiento de zona horaria.
System|Las siguientes funciones del sistema realizan operaciones y devuelven información sobre valores, objetos y configuraciones en [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)].
System|Las siguientes funciones escalares devuelven información estadística sobre el sistema:
SYSTEM_USER|Permite insertar un valor proporcionado por el sistema para el inicio de sesión actual en una tabla cuando no se especifica ningún valor predeterminado.
SYSUTCDATETIME|Devuelve un valor **datetime2** que contiene la fecha y hora del equipo en el que se ejecuta la instancia de [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)]. La fecha y la hora se devuelven como hora UTC (hora universal coordinada). La especificación de precisión de fracciones de segundo tiene un rango de 1 a 7 dígitos. La precisión predeterminada es de 7 dígitos.
TAN|Devuelve la tangente de la expresión de entrada.
TEXTPTR|Devuelve el valor del puntero de texto que corresponde a una columna **text**, **ntext** o **image** en formato **varbinary**. El valor del puntero de texto recuperado se puede utilizar en declaraciones READTEXT, WRITETEXT y UPDATETEXT.
TEXTVALID|Una función de **text**, **ntext** o **image** que comprueba si un puntero de texto específico es válido.
@@TEXTSIZE|Devuelve el valor actual de la opción [TEXTSIZE](../../t-sql/statements/set-textsize-transact-sql.md).
TIMEFROMPARTS|Devuelve un valor de **tiempo** para el tiempo especificado y con la precisión especificada.
@@TIMETICKS|Devuelve el número de microsegundos por tick.
TODATETIMEOFFSET|Devuelve un valor **datetimeoffset** que se traduce a partir de una expresión **datetime2**.
@@TOTAL_ERRORS|Devuelve el número de errores de escritura en disco encontrados por [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)] desde [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md .md)] iniciado por última vez.
@@TOTAL_READ|Devuelve el número de lecturas de disco, no lecturas de caché, realizadas por [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)] desde [!INCLUDE[ssNoVersion](../../includes/ ssnoversion-md.md)] se inició por última vez.
@@TOTAL_WRITE|Devuelve el número de escrituras en disco realizadas por [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)] desde [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md )] se inició por última vez.
@@TRANCOUNT|Devuelve el número de declaraciones BEGIN TRANSACTION que se han producido en la conexión actual.
TRANSLATE|Devuelve la cadena proporcionada como primer argumento, después de que algunos caracteres especificados en el segundo argumento se traduzcan a un conjunto de caracteres de destino, especificado en el tercer argumento.
Trigger|Las siguientes funciones escalares se pueden utilizar en la definición de un activador para probar cambios en los valores de los datos o para devolver otros datos.
TRIGGER_NESTLEVEL|Devuelve el número de activadores ejecutados para la declaración que activó el activador. TRIGGER_NESTLEVEL se utiliza en activadores DML y DDL para determinar el nivel actual de anidamiento.
TRIM|Elimina el carácter de espacio `char(32)` u otros caracteres especificados del inicio y el final de una cadena.
TRY_CAST|Devuelve un valor convertido al tipo de datos especificado si la conversión se realiza correctamente; de lo contrario, devuelve nulo.
TRY_CONVERT|Devuelve un valor convertido al tipo de datos especificado si la conversión se realiza correctamente; de lo contrario, devuelve nulo.
TRY_PARSE|Devuelve el resultado de una expresión, traducida al tipo de datos solicitado, o nulo si la conversión falla en [!INCLUDE[ssNoVersion](../../includes/ssnoversion-md.md)]. Utilice TRY_PARSE solo para convertir de cadena a fecha/hora y tipos de números.
TYPE_ID|Devuelve el ID de un nombre de tipo de datos especificado.
TYPE_NAME|Devuelve el nombre de tipo no calificado de un ID de tipo especificado.
TYPEPROPERTY|Devuelve información sobre un tipo de datos.
UNICODE|Devuelve el valor entero, según lo definido por el estándar Unicode, para el primer carácter de la expresión de entrada.
UPDATE()|Devuelve un valor booleano que indica si se realizó un intento de INSERTAR o ACTUALIZAR en una columna específica de una tabla o vista. UPDATE() se usa en cualquier parte dentro del cuerpo de un disparador [!INCLUDE[tsql](../../includes/tsql-md.md)] INSERT o UPDATE para probar si el disparador debe ejecutar ciertas acciones.
UPPER|Devuelve una expresión de caracteres con datos de caracteres en minúscula convertidos a mayúsculas.
USER_ID|Devuelve el número de identificación de un usuario de la base de datos.
USER_NAME|Devuelve un nombre de usuario de base de datos a partir de un número de identificación especificado.
USER|Permite insertar en una tabla un valor proporcionado por el sistema para el nombre de usuario de la base de datos del usuario actual cuando no se especifica ningún valor predeterminado.
VAR|Devuelve la varianza estadística de todos los valores de la expresión especificada. Puede ir seguido de la [cláusula OVER](../../t-sql/queries/select-over-clause-transact-sql.md).
VARP|Devuelve la varianza estadística de la población para todos los valores de la expresión especificada.
VERIFYSIGNEDBYASYMKEY|Prueba si los datos firmados digitalmente han cambiado desde que se firmaron.
VERIFYSIGNEDBYCERT|Prueba si los datos firmados digitalmente han cambiado desde que se firmaron.
XACT_STATE|Es una función escalar que informa el estado de la transacción del usuario de una solicitud en ejecución actual. XACT_STATE indica si la solicitud tiene una transacción de usuario activa y si la transacción se puede confirmar.
YEAR|Devuelve un número entero que representa el año de la *fecha* especificada.
